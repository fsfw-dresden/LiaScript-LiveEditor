name: Deploy LiaScript LiveEditor to Pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches:
      - main
    tags:
      - '*'

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: write
  pages: write
  id-token: write

# Allow only one concurrent deployment
concurrency:
  group: 'pages'
  cancel-in-progress: false

# Default to bash
defaults:
  run:
    shell: bash

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: recursive
      - name: Setup Pages
        id: pages
        uses: actions/configure-pages@v5
      - name: Install Node.js dependencies
        run: '[[ -f package-lock.json || -f npm-shrinkwrap.json ]] && npm ci || true'
      - name: Build LiveEditor
        env:
          RESPONSIVEVOICE_KEY: 
          PROXY: 
          SIGNALING_SERVER: 
          WEBSOCKET_SERVER: 
          ICE_SERVERS: 
        run: 'npm run build'
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          name: github-pages
          path: ./dist

  # Release job (runs only on tags)
  release:
    runs-on: ubuntu-latest
    needs: build
    if: github.ref_type == 'tag'
    steps:
      - name: Download LiveEditor Artifact
        uses: actions/download-artifact@v4
        with:
          name: github-pages
          path: dist
      - name: Extract LiveEditor Artifact
        run: |
          mkdir -p editor
          tar -xvf dist/artifact.tar -C editor
          rm dist/artifact.tar
      - name: Create release archive
        run: |
          cd editor
          tar -cjf ../liascript-editor-${{ github.ref_name }}.tar.bz2 *
          cd ..
      - name: Upload Release
        uses: softprops/action-gh-release@v2
        with:
          files: liascript-editor-${{ github.ref_name }}.tar.bz2
          token: ${{ secrets.GITHUB_TOKEN }}

  # Deploy to GitHub Pages job (runs on all pushes)
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Download LiveEditor Artifact
        uses: actions/download-artifact@v4
        with:
          name: github-pages
          path: dist
      - name: Extract LiveEditor Artifact
        run: |
          mkdir -p editor
          tar -xvf dist/artifact.tar -C editor
          rm dist/artifact.tar
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
